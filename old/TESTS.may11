Test results from compiling t/*/*.t
		C		Bytecode

base/cond.t	OK		OK
base/if.t	OK		OK
base/lex.t	OK		OK
base/pat.t	OK		OK
base/term.t	OK		OK
cmd/elsif.t	OK		OK
cmd/for.t	OK		OK
cmd/mod.t	OK		OK
cmd/subval.t	OK		OK
cmd/switch.t	OK		OK
cmd/while.t	OK		OK
io/argv.t	OK		OK
io/dup.t	OK		OK
io/fs.t		OK		OK
io/inplace.t	OK		OK
io/pipe.t	OK		OK
io/print.t	OK		OK
io/tell.t	OK		OK
op/append.t	OK		OK
op/array.t	OK		OK
op/auto.t	OK		OK
op/chop.t	OK		OK
op/cond.t	OK		OK
op/delete.t	OK		OK
op/do.t		OK		OK
op/each.t	OK		OK
op/eval.t	OK		OK
op/exec.t	OK		OK
op/exp.t	OK		OK
op/flip.t	OK		OK
op/fork.t	OK		OK
op/glob.t	OK		OK
op/goto.t	OK		OK
op/groups.t	OK (s/ucb/bin/ under Linux)
op/index.t	OK		OK
op/int.t	OK		OK
op/join.t	OK		OK
op/list.t	OK		OK
op/local.t	OK		OK
op/magic.t	OK		OK
op/misc.t	no DATA filehandle so succeeds trivially with 1..0
op/mkdir.t	OK		OK
op/my.t		OK		OK
op/oct.t	OK		OK
op/ord.t	OK		OK
op/overload.t	Mostly not ok	Mostly not ok
op/pack.t	OK		OK
op/pat.t	OK		OK
op/push.t	OK		OK
op/quotemeta.t	OK		OK
op/rand.t	OK		OK
op/range.t	OK		OK
op/read.t	OK		OK
op/readdir.t	OK		OK
op/ref.t	omits "ok 40" (lexical destruction)	OK (Bytecode)
op/regexp.t	OK		OK
op/repeat.t	OK		OK
op/sleep.t	OK		OK
op/sort.t	OK		OK
op/split.t	OK		OK
op/sprintf.t	OK		OK
op/stat.t	OK		OK
op/study.t	OK		OK
op/subst.t	OK		OK
op/substr.t	OK		OK
op/time.t	OK		OK
op/undef.t	OK		OK
op/unshift.t	OK		OK
op/vec.t	OK		OK
op/write.t	not ok 3 (no CvOUTSIDE lexical visibility from runtime eval)
